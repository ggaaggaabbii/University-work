     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, fopen, fclose, printf, fprintf, gets         ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import scanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import fopen msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  import fprintf msvcrt.dll
    15                                  import gets msvcrt.dll
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19 00000000 <res 0000001E>              numeFisier resb 30
    20 0000001E 00000000                    descriptorFisier dd 0
    21 00000022 <res 00000078>              text resb 120
    22 0000009A 257300                      formatCitire db "%s", 0
    23 0000009D 7700                        formatScriere db "w", 0
    24 0000009F 666973696572756C20-         mesajEroare db "fisierul nu poate fi creat", 0
    24 000000A8 6E7520706F61746520-
    24 000000B1 666920637265617400 
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28                                          ; ...
    29 00000000 68[00000000]                    push dword numeFisier
    30 00000005 FF15[00000000]                  call [gets]
    31 0000000B 83C408                          add esp, 4 * 2;citim numele fisierului
    32                                          
    33 0000000E 68[22000000]                    push dword text
    34 00000013 FF15[00000000]                  call [gets]
    35 00000019 83C408                          add esp, 4 * 2;citim continutul fisierului
    36                                          
    37 0000001C 68[9D000000]                    push dword formatScriere        
    38 00000021 68[00000000]                    push dword numeFisier
    39 00000026 FF15[00000000]                  call [fopen]
    40 0000002C 83C408                          add esp, 4 * 2;deschidem fisierul de scriere
    41                                          
    42 0000002F A3[1E000000]                    mov [descriptorFisier], eax
    43                                          
    44 00000034 833D[1E000000]00                cmp dword [descriptorFisier], 0
    45 0000003B 742B                            je eroare;verificam daca fisierul poate fi creat si afisam un mesaj corespunzator
    46                                          
    47 0000003D 68[22000000]                    push dword text
    48 00000042 FF35[1E000000]                  push dword [descriptorFisier]
    49 00000048 FF15[00000000]                  call [fprintf]
    50 0000004E 83C408                          add esp, 4 * 2;scriem mesajul in fisier;        
    51                                          
    52                                          
    53 00000051 FF35[1E000000]                  push dword [descriptorFisier]
    54 00000057 FF15[00000000]                  call [fclose]
    55 0000005D 83C404                          add esp, 4 * 1;inchidem fisierul
    56                                          
    57                                          final:
    58                                              ; exit(0)
    59                                              
    60 00000060 6A00                                push    dword 0      ; push the parameter for exit onto the stack
    61 00000062 FF15[00000000]                      call    [exit]       ; call exit to terminate the program
    62                                          
    63                                          eroare:
    64 00000068 68[9F000000]                        push dword mesajEroare
    65 0000006D 68[9A000000]                        push dword formatCitire
    66 00000072 FF15[00000000]                      call [printf]
    67 00000078 83C408                              add esp, 4 * 2
    68 0000007B EBE3                                jmp final;afisam mesajul de eroare dupa care sarim la terminarea programului
    69                                              
