     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fread, scanf, printf, fclose, gets               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fopen msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  import scanf msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  import fclose msvcrt.dll
    15                                  import gets msvcrt.dll
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19 00000000 <res 0000001E>              numeFisier resb 30
    20 0000001E <res 00000082>              text resb 130
    21                                      len equ 130
    22 000000A0 00000000                    descriptorFisier dd 0
    23 000000A4 257300                      formatCitire db "%s", 0
    24 000000A7 257300                      formatCitireNume db "%s", 0
    25 000000AA 25640A0D00                  formatAfisare db "%d", 10, 13, 0
    26 000000AF 7200                        modAcces db "r", 0
    27 000000B1 00000000                    frecvSpatiu dd 0
    28 000000B5 666973696572756C20-         mesajEroare db "fisierul nu poate fi deschis", 0
    28 000000BE 6E7520706F61746520-
    28 000000C7 666920646573636869-
    28 000000D0 7300               
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32                                          ; ...
    33 00000000 68[00000000]                    push dword numeFisier
    34 00000005 FF15[00000000]                  call [gets]
    35 0000000B 83C408                          add esp, 4 * 2
    36                                          
    37 0000000E 68[AF000000]                    push dword modAcces
    38 00000013 68[00000000]                    push dword numeFisier
    39 00000018 FF15[00000000]                  call [fopen]
    40 0000001E 83C408                          add esp, 4 * 2
    41                                          
    42                                          
    43 00000021 A3[A0000000]                    mov [descriptorFisier], eax
    44 00000026 833D[A0000000]00                cmp dword [descriptorFisier], 0
    45 0000002D 7457                            je eroare
    46                                          
    47 0000002F FF35[A0000000]                  push dword [descriptorFisier]
    48 00000035 6882000000                      push dword len
    49 0000003A 6A01                            push dword 1
    50 0000003C 68[1E000000]                    push dword text
    51 00000041 FF15[00000000]                  call [fread]
    52 00000047 83C410                          add esp, 4 * 4
    53                                          
    54 0000004A BF[1E000000]                    mov edi, text
    55 0000004F B020                            mov al, ' '
    56                                          compara:
    57 00000051 AE                                  scasb
    58 00000052 742A                                je incrementare
    59                                              continua:
    60 00000054 803F00                                  cmp byte [edi], 0
    61 00000057 75F8                                    jne compara
    62                                              
    63                                              
    64                                          
    65 00000059 FF35[B1000000]                  push dword [frecvSpatiu]
    66 0000005F 68[AA000000]                    push dword formatAfisare
    67 00000064 FF15[00000000]                  call [printf]
    68                                          
    69                                          
    70 0000006A FF35[A0000000]                  push dword [descriptorFisier]
    71 00000070 FF15[00000000]                  call [fclose]
    72                                          
    73                                          final:
    74                                              ; exit(0)
    75 00000076 6A00                                push    dword 0      ; push the parameter for exit onto the stack
    76 00000078 FF15[00000000]                      call    [exit]       ; call exit to terminate the program
    77                                          
    78                                          incrementare:
    79 0000007E FF05[B1000000]                      inc dword [frecvSpatiu]
    80 00000084 EBCE                                jmp continua
    81                                            
    82                                          eroare:
    83 00000086 68[B5000000]                        push dword mesajEroare
    84 0000008B 68[A4000000]                        push dword formatCitire
    85 00000090 FF15[00000000]                      call [printf]
    86 00000096 83C408                              add esp, 4 * 2
    87 00000099 EBDB                                jmp final;afisam mesajul de eroare dupa care sarim la terminarea programului
    88                                              
