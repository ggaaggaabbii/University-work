Prg state 20:
ExeStack:
new(v1, 2)
(new(v2, 3); (new(v3, 4); Model.Stmt.NewBarrierStmt@7506e922))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
(new(v2, 3); (new(v3, 4); Model.Stmt.NewBarrierStmt@7506e922))
SymTable:
v1 -> 1
Out:
FileTable:
Heap:
1 -> 2
BarrierTable:

Prg state 20:
ExeStack:
new(v2, 3)
(new(v3, 4); Model.Stmt.NewBarrierStmt@7506e922)
SymTable:
v1 -> 1
Out:
FileTable:
Heap:
1 -> 2
BarrierTable:

Prg state 20:
ExeStack:
(new(v3, 4); Model.Stmt.NewBarrierStmt@7506e922)
SymTable:
v1 -> 1
v2 -> 2
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
BarrierTable:

Prg state 20:
ExeStack:
new(v3, 4)
Model.Stmt.NewBarrierStmt@7506e922
SymTable:
v1 -> 1
v2 -> 2
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
BarrierTable:

Prg state 20:
ExeStack:
Model.Stmt.NewBarrierStmt@7506e922
SymTable:
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:

Prg state 20:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
new(v1, 2)
(new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
(new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))
SymTable:
v1 -> 1
Out:
FileTable:
Heap:
1 -> 2
BarrierTable:

Prg state 20:
ExeStack:
new(v2, 3)
(new(v3, 4); newBarrier(cnt, rH(v2)))
SymTable:
v1 -> 1
Out:
FileTable:
Heap:
1 -> 2
BarrierTable:

Prg state 20:
ExeStack:
(new(v3, 4); newBarrier(cnt, rH(v2)))
SymTable:
v1 -> 1
v2 -> 2
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
BarrierTable:

Prg state 20:
ExeStack:
new(v3, 4)
newBarrier(cnt, rH(v2))
SymTable:
v1 -> 1
v2 -> 2
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
BarrierTable:

Prg state 20:
ExeStack:
newBarrier(cnt, rH(v2))
SymTable:
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:

Prg state 20:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
((new(v1, 2); (new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))); fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1))))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
(new(v1, 2); (new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2)))))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
new(v1, 2)
(new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
(new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
Out:
FileTable:
Heap:
1 -> 2
BarrierTable:

Prg state 20:
ExeStack:
new(v2, 3)
(new(v3, 4); newBarrier(cnt, rH(v2)))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
Out:
FileTable:
Heap:
1 -> 2
BarrierTable:

Prg state 20:
ExeStack:
(new(v3, 4); newBarrier(cnt, rH(v2)))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
v2 -> 2
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
BarrierTable:

Prg state 20:
ExeStack:
new(v3, 4)
newBarrier(cnt, rH(v2))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
v2 -> 2
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
BarrierTable:

Prg state 20:
ExeStack:
newBarrier(cnt, rH(v2))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:

Prg state 20:
ExeStack:
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 22:
ExeStack:
(await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))))
(await(cnt); Print(rH(v3)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 22:
ExeStack:
await(cnt)
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
(await(cnt); Print(rH(v3)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 22:
ExeStack:
await(cnt)
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 24:
ExeStack:
(await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 20:
ExeStack:
await(cnt)
Print(rH(v3))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 22:
ExeStack:
await(cnt)
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 24:
ExeStack:
await(cnt)
((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 20:
ExeStack:
await(cnt)
Print(rH(v3))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
await(cnt)
((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 20:
ExeStack:
Print(rH(v3))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
wH(v1, (rH(v1) * 10))
Print(rH(v1))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 20:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
Print(rH(v1))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
(wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10)))
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
wH(v2, (rH(v2) * 10))
wH(v2, (rH(v2) * 10))
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
wH(v2, (rH(v2) * 10))
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 30
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 300
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
300
FileTable:
Heap:
1 -> 20
2 -> 300
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 20:
ExeStack:
((new(v1, 2); (new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))); fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1))))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
(new(v1, 2); (new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2)))))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
new(v1, 2)
(new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
(new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
Out:
FileTable:
Heap:
1 -> 2
BarrierTable:

Prg state 20:
ExeStack:
new(v2, 3)
(new(v3, 4); newBarrier(cnt, rH(v2)))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
Out:
FileTable:
Heap:
1 -> 2
BarrierTable:

Prg state 20:
ExeStack:
(new(v3, 4); newBarrier(cnt, rH(v2)))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
v2 -> 2
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
BarrierTable:

Prg state 20:
ExeStack:
new(v3, 4)
newBarrier(cnt, rH(v2))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
v2 -> 2
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
BarrierTable:

Prg state 20:
ExeStack:
newBarrier(cnt, rH(v2))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:

Prg state 20:
ExeStack:
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 22:
ExeStack:
(await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))))
(await(cnt); Print(rH(v3)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 22:
ExeStack:
await(cnt)
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
(await(cnt); Print(rH(v3)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 22:
ExeStack:
await(cnt)
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 24:
ExeStack:
(await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 20:
ExeStack:
await(cnt)
Print(rH(v3))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 22:
ExeStack:
await(cnt)
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 24:
ExeStack:
await(cnt)
((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 20:
ExeStack:
await(cnt)
Print(rH(v3))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
await(cnt)
((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 20:
ExeStack:
Print(rH(v3))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
wH(v1, (rH(v1) * 10))
Print(rH(v1))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 20:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
Print(rH(v1))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
(wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10)))
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
wH(v2, (rH(v2) * 10))
wH(v2, (rH(v2) * 10))
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
wH(v2, (rH(v2) * 10))
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 30
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 300
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
300
FileTable:
Heap:
1 -> 20
2 -> 300
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 20:
ExeStack:
((new(v1, 2); (new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))); fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1))))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
(new(v1, 2); (new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2)))))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
new(v1, 2)
(new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
Out:
FileTable:
Heap:
BarrierTable:

Prg state 20:
ExeStack:
(new(v2, 3); (new(v3, 4); newBarrier(cnt, rH(v2))))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
Out:
FileTable:
Heap:
1 -> 2
BarrierTable:

Prg state 20:
ExeStack:
new(v2, 3)
(new(v3, 4); newBarrier(cnt, rH(v2)))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
Out:
FileTable:
Heap:
1 -> 2
BarrierTable:

Prg state 20:
ExeStack:
(new(v3, 4); newBarrier(cnt, rH(v2)))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
v2 -> 2
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
BarrierTable:

Prg state 20:
ExeStack:
new(v3, 4)
newBarrier(cnt, rH(v2))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
v2 -> 2
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
BarrierTable:

Prg state 20:
ExeStack:
newBarrier(cnt, rH(v2))
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:

Prg state 20:
ExeStack:
fork((await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1)))))
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
(fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))); (await(cnt); Print(rH(v3))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 22:
ExeStack:
(await(cnt); (wH(v1, (rH(v1) * 10)); Print(rH(v1))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
fork((await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))))
(await(cnt); Print(rH(v3)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 22:
ExeStack:
await(cnt)
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[]

Prg state 20:
ExeStack:
(await(cnt); Print(rH(v3)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 22:
ExeStack:
await(cnt)
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 24:
ExeStack:
(await(cnt); ((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2))))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 20:
ExeStack:
await(cnt)
Print(rH(v3))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 22:
ExeStack:
await(cnt)
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 24:
ExeStack:
await(cnt)
((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22]

Prg state 20:
ExeStack:
await(cnt)
Print(rH(v3))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
await(cnt)
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
await(cnt)
((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 20:
ExeStack:
Print(rH(v3))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
(wH(v1, (rH(v1) * 10)); Print(rH(v1)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
((wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10))); Print(rH(v2)))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 20:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
wH(v1, (rH(v1) * 10))
Print(rH(v1))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
(wH(v2, (rH(v2) * 10)); wH(v2, (rH(v2) * 10)))
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 2
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
Print(rH(v1))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
wH(v2, (rH(v2) * 10))
wH(v2, (rH(v2) * 10))
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
FileTable:
Heap:
1 -> 20
2 -> 3
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 22:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 30
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
wH(v2, (rH(v2) * 10))
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 30
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
Print(rH(v2))
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
FileTable:
Heap:
1 -> 20
2 -> 300
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

Prg state 24:
ExeStack:
SymTable:
cnt -> 1
v1 -> 1
v2 -> 2
v3 -> 3
Out:
4
20
300
FileTable:
Heap:
1 -> 20
2 -> 300
3 -> 4
BarrierTable:
1 -> 3=[22, 20, 24]

